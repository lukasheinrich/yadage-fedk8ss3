sudo: required
services:
- docker
language: python
python:
- '3.6'
env:
- secure: "cVHueBU/nDD9u+M31U168luhNHFBNWRN3WDj9VfaKYKOmGz70KKlWwfTNHr2YQogGwUFZDgZ0TGZf2TVzH33HuHVAzF1EE37q31dX+duiVHPMZIZ90F02kjMyc43EeyW1dtRf9T20aL2/dhtieL2lF+Nnrlcxkmd+6xGLn0OWbiUKIal9BvKR7X4H4rP0bIOdJxFXgPcxos7bz0tW4bove5M+fbgTor/OB8Wa7icrFJ9t1vPpmWZdqjLGgBSglD4r4F4lM5yy2eoikO/TYb7ZrYddXLn+DkZtIUaQSSo43UXkDBu+7kvdVE/A52POFi6BJxCxOPUi9DPUH/ibwGRcuhEfBOZOvkXxyIRN+CEuaXQEvWz2vdwv1C1MEUnsUrfPzIUK8nSo87BjxlvUFQkxTwpldo0x9OCXnS8sQZJwHh/A/CrO8EgPESt0YBNNXTOe4EMxB39pYr6jATWRySMb+YP4w4fQe/ue/RFezEkjoA+y00KlTDVV0hYwtBZnoAczYUNErd2bvQ8MmDfsil8CNy7Ynp0ruOrG6TKevGd4npvZ4TMkEGOVP4lC+cw6N0UqgZU3BAYF96Hmz8rbxYeUChMcueLDFm1S0g02DeD4NNgXX8mWHDTqiCSbIVLtnHwlv4TsFtKP+YVqCxokQEI08L2AuFKgswoby15T8cmRys="
install:
- python -c 'import os;print(list(os.environ.keys()))'
- pip install recast-atlas pyyaml
- pip install -U yadage kubernetes recast-atlas pyyaml
- cd plugins/yadage-extresult; pip install -e .;cd -
- cd plugins/yadage-kube; pip install -e .;cd -
- cd plugins/yadage-objstore; pip install -e .;cd -


- sudo apt-get install golang-1.10-go
- /usr/lib/go-1.10/bin/go version
- export GOROOT=/usr/lib/go-1.10
- /usr/lib/go-1.10/bin/go get sigs.k8s.io/kind
- curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
- echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
- sudo apt-get update
- sudo apt-get install -y kubectl
- docker build -t lukasheinrich/yadkube:citest -f images/yadkube/Dockerfile .
- kind create cluster
- export KUBECONFIG="$(kind get kubeconfig-path)"
- kubectl cluster-info

- kind load docker-image lukasheinrich/yadkube:citest
- export KUBECONFIG="$(kind get kubeconfig-path)"
- export RECAST_AUTH_USERNAME=recast
- eval $(recast auth write --basedir yadageauth)
- cat runner.yml |sed 's|lukasheinrich/yadkube|lukasheinrich/yadkube:citest|' > cirunner.yml
script:
- kubectl create secret generic hepauth --from-file=yadageauth/getkrb.sh
- kubectl create -f crd/pv.yml -f crd/pvc.yml -f crd/role.yml -f storage.yml
- kubectl create -f cirunner.yml
- sleep 60
- kubectl get pods
- kubectl get pods|grep workflow|awk '{print $1}'|xargs kubectl logs -f
- kubectl cp storage:/data/inclworkdir workdir
- cat workdir/delphes/output.lhco
- cat runner_auth.yml |sed 's|lukasheinrich/yadkube|lukasheinrich/yadkube:citest|' > cirunner.yml
- kubectl create -f cirunner.yml
- sleep 60
- kubectl get pods
- kubectl get pods|grep workflowauth|awk '{print $1}'|xargs kubectl logs -f
- kubectl cp storage:/data/inclworkdir_auth workdir_auth
- cat workdir_auth/krbtest/output.txt
- kubectl create -f https://raw.githubusercontent.com/GoogleCloudPlatform/metacontroller/master/manifests/metacontroller-namespace.yaml -f https://raw.githubusercontent.com/GoogleCloudPlatform/metacontroller/master/manifests/metacontroller-rbac.yaml -f https://raw.githubusercontent.com/GoogleCloudPlatform/metacontroller/master/manifests/metacontroller.yaml
- kubectl apply -f crd
- kubectl apply -f crd/examples/wflow_mg.yml
- sleep 60
- kubectl get pods -n yadage
- kubectl get pods
- kubectl get pods|grep myflow|awk '{print $1}'|xargs kubectl logs -f
