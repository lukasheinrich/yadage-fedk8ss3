sudo: required
services:
- docker
language: python
python:
- '3.6'
env:
- secure: "gWr08BNGFeMlgGUcn0y9UsmybssAzfnKn98y4mJFwePAGFBupCo8ETGAt9WU/FB+6xUaLHYqiyqtLrFMJDCd4pMgGuPws9d1de4Oz4B4vcAKRuLzgE8oRW4vR76BhdxbVRfaGohdGT/86k1/QLZeQLwlwdCKyQ2lL/aFppOiaEHWvOR3J8wvs0AESrARuNW4Taiif38FDUu+1PU+2hD9lnawV2OWgoJl5lt1A5A7E1FUYK+SAyktSSc9Dh6ym6LDLKqkEm9qeg0/db9MBBq570KaxLdg6Nyg6kdU3XMpN5onePRXB/O19Cbx99eMTkdlm2fMP0BUWG+BpIAPH/1CFnxNTLQIDmyrCQjFQW5yvn9YY71RLzx0lEUEI27sQpM/xrxsQIxyABpKTpFtJi24mxwDLn0fEVDZdtTeu62RaWDWV7kRCL/5B+5rsP7w8K7EP/Cs6AYx7rButUuLUzYfuu/MKGg9P0LlMIt98slIBPHhYQgV+Ua7yuEIxgiOGf0rVk5rRY5pKDLHwsRe7dv3RrGt3e18NQSoDxTuLhYHQRIzBRbXDBXJ1WjGQ8VLR0NYL1BY/7y37wXH1xxmxG1if4pDTP/TNP2k3pM3Fa8pdOQR8BOvCP1sXkabLTSNUraGRe4/e0YzcbsksD0Vh342OKl96NVN425TUux3VARU9Mc="
install:
- python -c 'import os;print(list(os.environ.keys()))'
- pip install recast-atlas pyyaml
- pip install -U yadage kubernetes recast-atlas pyyaml
- cd plugins/yadage-extresult; pip install -e .;cd -
- cd plugins/yadage-kube; pip install -e .;cd -
- cd plugins/yadage-objstore; pip install -e .;cd -


- sudo apt-get install golang-1.10-go
- /usr/lib/go-1.10/bin/go version
- export GOROOT=/usr/lib/go-1.10
- /usr/lib/go-1.10/bin/go get sigs.k8s.io/kind
- curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
- echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
- sudo apt-get update
- sudo apt-get install -y kubectl
- docker build -t lukasheinrich/yadkube:citest -f images/yadkube/Dockerfile .
- kind create cluster
- export KUBECONFIG="$(kind get kubeconfig-path)"
- kubectl cluster-info

- kind load docker-image lukasheinrich/yadkube:citest
- export KUBECONFIG="$(kind get kubeconfig-path)"
- export RECAST_AUTH_USERNAME=recast
- eval $(recast auth write --basedir yadageauth)
- cat runner.yml |sed 's|lukasheinrich/yadkube|lukasheinrich/yadkube:citest|' > cirunner.yml
script:
- kubectl create secret generic hepauth --from-file=yadageauth/getkrb.sh
- kubectl create -f crd/pv.yml -f crd/pvc.yml -f crd/role.yml -f storage.yml
- kubectl create -f cirunner.yml
- sleep 60
- kubectl get pods
- kubectl get pods|grep workflow|awk '{print $1}'|xargs kubectl logs -f
- kubectl cp storage:/data/inclworkdir workdir
- cat workdir/delphes/output.lhco
